generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id       Int     @id @default(autoincrement())
  slug     String  @unique
  book     Book    @relation(references: [id], fields: [bookId])
  bookId   Int     @unique
  price    Int
  discount Float   @default(0)
  featured Boolean @default(false)
  rating   Float   @default(0)

  basketItems BasketItem[]
}

model Book {
  id          Int        @id @default(autoincrement())
  name        String
  author      String
  image       String
  pages       Int
  format      String
  description String
  categories  Category[] @relation("BookToCategory")
  product     Product?
  languages   Language[] @relation("BookToLanguage")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[] @relation("BookToCategory")
}

model Language {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[] @relation("BookToLanguage")
}

model BasketItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(references: [id], fields: [productId])
  productId Int
  quantity  Int     @default(1)
  basket    Basket  @relation(references: [id], fields: [basketId])
  basketId  String

  @@unique([basketId, productId])
}

model Basket {
  id          String       @id
  basketItems BasketItem[]
  user        User?        @relation(references: [email], fields: [userEmail])
  userEmail   String?      @unique
  lastUpdate  DateTime     @updatedAt
}

model User {
  id            Int               @id @default(autoincrement())
  email         String            @unique
  phonenumber   String            @unique
  firstName     String
  lastName      String
  password      String
  emailVerified Boolean           @default(false)
  createdAt     DateTime          @updatedAt
  emailToken    VerificationToken @relation(references: [id], fields: [emailTokenId])
  emailTokenId  Int               @unique
  basket        Basket?
  basketId      String?
}

model VerificationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @updatedAt
  user      User?
}
